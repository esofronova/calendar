{"version":3,"sources":["data.js","app.js","index.js"],"names":["weekDays","monthNames","years","Array","map","k","i","Calendar","useState","Date","getFullYear","currentYear","setCurrentYear","getMonth","currentMonth","setCurrentMonth","currentDay","getDate","monthName","toLocaleString","month","rows","year","weekDay","getDay","monthDays","monthDaysArr","from","length","days","push","forEach","day","createCalendar","className","onClick","document","querySelector","classList","toggle","item","index","row","slice","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c8a67223.chunk.js","sourcesContent":["export const weekDays = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\r\n\r\nexport const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\nexport const years = [...Array(2100 - 1970 + 1)].map((k = 2100, i) => k - i);","import './style.scss';\r\nimport { monthNames, weekDays, years } from './data';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport { useState } from 'react';\r\n\r\nexport default function Calendar() {\r\n\r\n  let [currentYear, setCurrentYear] = useState(new Date().getFullYear());\r\n  let [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\r\n  let currentDay = new Date().getDate();\r\n\r\n  let monthName = new Date(currentYear, currentMonth).toLocaleString('default', { month: 'long' });\r\n\r\n  // number of rows in every month\r\n  let rows = [];\r\n\r\n  function createCalendar(year, month) {\r\n    let date = new Date(year, month);\r\n    // number of week day\r\n    let weekDay = date.getDay();\r\n    // total number of days (last day of every month)\r\n    let monthDays = new Date(year, month + 1, 0).getDate();\r\n\r\n    // convert total number of days to array\r\n    let monthDaysArr = Array.from({ length: monthDays }, (k, i) => i++);\r\n\r\n    // make Sunday last day of the week (default: 0)\r\n    if (weekDay === 0) { weekDay = 7 }\r\n\r\n    // if day is not first day of the week fill it with empty spaces\r\n    let days = [];\r\n    for (let i = 1; i < weekDay; i++) { days.push(null); };\r\n\r\n    // push 7 days to each row\r\n    monthDaysArr.forEach((day) => {\r\n      days.push(day + 1);\r\n      if (days.length === 7) {\r\n        rows.push(days);\r\n        days = [];\r\n      };\r\n    });\r\n\r\n    // if last day is not Sunday fill it with empty spaces\r\n    if (days.length !== 0) {\r\n      for (let i = days.length; i < 7; i++) { days.push(null); };\r\n    };\r\n\r\n    // push the rest of the days\r\n    rows.push(days);\r\n  };\r\n\r\n  createCalendar(currentYear, currentMonth);\r\n\r\n  return (\r\n    <div className=\"calendar py-5\">\r\n      <div className=\"calendar-body bg-white mx-auto text-center rounded shadow position-relative overflow-hidden\">\r\n        <div className=\"d-flex flex-column h-100\">\r\n          <div className=\"header bg-danger text-white fw-bold m-0 h-100\">\r\n            <div className=\"d-flex justify-content-between align-items-center mx-3 border-bottom py-2\">\r\n              <button\r\n                className=\"btn text-white p-2\"\r\n                onClick={() => {\r\n                  setCurrentMonth(--currentMonth);\r\n                  if (currentMonth === -1) {\r\n                    setCurrentMonth(11);\r\n                    setCurrentYear(--currentYear);\r\n                  };\r\n                }}\r\n              ><Icon.CaretLeftFill /></button>\r\n              <div>\r\n                <div \r\n                  className=\"p-2 pointer\"\r\n                  onClick={() => { document.querySelector('.years-overlay').classList.toggle('d-none'); }}\r\n                >{currentYear}</div>\r\n                <div \r\n                  className=\"p-2 pointer\"\r\n                  onClick={() => { document.querySelector('.months-overlay').classList.toggle('d-none'); }}\r\n                >{monthName}</div>\r\n              </div>\r\n              <button\r\n                className=\"btn text-white p-2\"\r\n                onClick={() => {\r\n                  setCurrentMonth(++currentMonth);\r\n                  if (currentMonth === 12) {\r\n                    setCurrentMonth(0);\r\n                    setCurrentYear(++currentYear);\r\n                  };\r\n                }}\r\n              ><Icon.CaretRightFill /></button>\r\n            </div>\r\n          </div>\r\n          <table className=\"table m-0 table-striped\">\r\n            <thead className=\"bg-danger\">\r\n              <tr className=\"text-white\">\r\n                {weekDays.map((item, index) => {\r\n                  return (\r\n                    <th key={index}>{item}</th>\r\n                  );\r\n                })}\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"\">\r\n              {rows.map((row, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    {row.map((day, index) => {\r\n                      return (\r\n                        <td key={index} className={\"border\" + (day === currentDay && currentYear === new Date().getFullYear() && currentMonth === new Date().getMonth() ? \" bg-danger text-white\" : \"\") + (index === 5 || index === 6 ? \" text-danger\" : \"\") + (day !== null ? \" hoverable pointer\" : \"\")}>{day}</td>\r\n                      );\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"months-overlay h-100 position-absolute bg-white d-none\">\r\n          <div className=\"row m-0 h-100\">\r\n            {monthNames.map((month, index) => {\r\n              return (\r\n                <div \r\n                  key={index} \r\n                  className=\"col-4 border p-3 pointer centered hoverable\"\r\n                  onClick={() => {\r\n                    setCurrentMonth(index);\r\n                    document.querySelector('.months-overlay').classList.toggle('d-none');\r\n                  }}\r\n                >{month.slice(0, 3)}</div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"years-overlay h-100 position-absolute bg-white d-none\">\r\n          <div className=\"row m-0 h-100 overflow-auto\">\r\n            {years.map((year, index) => {\r\n              return (\r\n                <div \r\n                  key={index} \r\n                  className=\"col-3 border p-3 pointer centered hoverable\"\r\n                  onClick={() => {\r\n                    setCurrentYear(year);\r\n                    document.querySelector('.years-overlay').classList.toggle('d-none');\r\n                    document.querySelector('.months-overlay').classList.toggle('d-none');\r\n                  }}\r\n                >{year}</div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './custom-classes.scss';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}